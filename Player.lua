---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by nikita.
--- DateTime: 28.03.2025 13:53
---

local mt = {}
mt.__index = mt

function mt:loadAnimation()
    anim8 = require 'anim8/anim8' -- animatons
    self.spriteSheet = love.graphics.newImage('resources/sprites/player-sheet.png')
    self.grid = anim8.newGrid(12, 18, player.spriteSheet:getWidth(), player.spriteSheet:getHeight());

    self.animations = {}
    self.animations.down = anim8.newAnimation(self.grid('1-4', 1), 0.2)
    self.animations.up = anim8.newAnimation(self.grid('1-4', 4), 0.2)
    self.animations.left = anim8.newAnimation(self.grid('1-4', 2), 0.2)
    self.animations.right = anim8.newAnimation(self.grid('1-4', 3), 0.2)

    self.anim = self.animations.left
    self:initOutsideSound()
end

function mt:initOutsideSound()
    self.outsideSound = love.audio.newSource('resources/sounds/uletaiu-na-gaitii-no-eto-minus-ushi.mp3', 'static')
end

function mt:setCollider()
    self.collider = world:newBSGRectangleCollider(400, 250, 50, 100, 10)
    --self.collider:setCollisionClass('Player')
    self.collider:setCollisionClass('Player')
    self.collider:setFixedRotation(true)
    self.collider:setObject(self)
end

function mt:update(dt)

    local isMoving = false
    local vx = 0
    local vy = 0

    if love.keyboard.isDown("right") then
        vx = self.speed
        self.anim = self.animations.right
        isMoving = true
    end
    if love.keyboard.isDown("left") then
        vx = -self.speed
        self.anim = self.animations.left
        isMoving = true
    end
    if love.keyboard.isDown("up") then
        vy = -self.speed
        self.anim = self.animations.up
        isMoving = true
    end
    if love.keyboard.isDown("down") then
        vy = self.speed
        self.anim = self.animations.down
        isMoving = true
    end

    if isMoving == false then
        self.anim:gotoFrame(2)
    end

    if player.x <= 0 or player.x >= self.gameMap.width * self.gameMap.tilewidth or
        player.y <= 0 or player.y >= self.gameMap.height * self.gameMap.tileheight then
        self.outsideSound:play()
    end
    self.collider:setLinearVelocity(vx, vy)
end

return {
    new = function(x, y, world, gameMap)
        return setmetatable({
            x = x, y = y,
            speed = 300,
            world = world,
            gameMap = gameMap
        }, mt)
    end
}